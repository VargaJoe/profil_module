// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SidebarUser /> rendering Match to snapshot 1`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(SidebarUser)>
        <SidebarUser
          dispatch={[Function]}
          fullName="Test User 1"
          user={null}
          userName="TestUser1"
        >
          <Link
            replace={false}
            to="/user/:TestUser1"
          >
            <a
              href="/user/:TestUser1"
              onClick={[Function]}
            >
              <div
                className="sn_sidebar__user"
              >
                <span
                  className="sn_sidebar__user__avatar--default"
                >
                  <i
                    className="fi flaticon-user"
                  />
                </span>
                <div
                  className="sn_sidebar__user__name"
                >
                  Test User 1
                </div>
              </div>
            </a>
          </Link>
        </SidebarUser>
      </Connect(SidebarUser)>
    </Provider>
  </Router>
</BrowserRouter>
`;

exports[`<SidebarUser /> rendering Match to snapshot 2`] = `
<BrowserRouter>
  <Router
    history={
      Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      }
    }
  >
    <Provider
      store={
        Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        }
      }
    >
      <Connect(SidebarUser)>
        <SidebarUser
          dispatch={[Function]}
          fullName="Test User 1"
          user={null}
          userName="TestUser1"
        >
          <Link
            replace={false}
            to="/user/:TestUser1"
          >
            <a
              href="/user/:TestUser1"
              onClick={[Function]}
            >
              <div
                className="sn_sidebar__user"
              >
                <span
                  className="sn_sidebar__user__avatar--default"
                >
                  <i
                    className="fi flaticon-user"
                  />
                </span>
                <div
                  className="sn_sidebar__user__name"
                >
                  Test User 1
                </div>
              </div>
            </a>
          </Link>
        </SidebarUser>
      </Connect(SidebarUser)>
    </Provider>
  </Router>
</BrowserRouter>
`;
